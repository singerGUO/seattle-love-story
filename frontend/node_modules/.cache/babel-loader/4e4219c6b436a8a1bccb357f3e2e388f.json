{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\src\\\\TodoList.js\";\nimport React, { Component } from 'react';\nimport Todoitem from \"./Todoitem\";\nimport TodoForm from './TodoForm';\nvar APIURL = '/api/todos/';\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  function TodoList(props) {\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoList).call(this, props));\n    _this.state = {\n      todos: []\n    };\n    _this.addTodo = _this.addTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadTodos();\n    }\n  }, {\n    key: \"loadTodos\",\n    value: function loadTodos() {\n      var _this2 = this;\n\n      fetch(APIURL).then(function (resp) {\n        if (!resp.ok) {\n          if (resp.status >= 400 && resp.status < 500) {\n            return resp.json().then(function (data) {\n              var err = {\n                whatever: data.message\n              };\n              throw err;\n            });\n          } else {\n            var err = {\n              whatever: 'Please try again later, server is not responding'\n            };\n            throw err;\n          }\n        }\n\n        return resp.json();\n      }) //setState means we should change the todos in state\n      .then(function (todos) {\n        _this2.setState({\n          todos: todos\n        });\n      });\n    } //take second argument\n\n  }, {\n    key: \"addTodo\",\n    value: function addTodo(val) {\n      var _this3 = this;\n\n      fetch(APIURL, {\n        method: 'post',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify({\n          name: val\n        })\n      }).then(function (resp) {\n        if (!resp.ok) {\n          if (resp.status >= 400 && resp.status < 500) {\n            return resp.json().then(function (data) {\n              var err = {\n                whatever: data.message\n              };\n              throw err;\n            });\n          } else {\n            var err = {\n              whatever: 'Please try again later, server is not responding'\n            };\n            throw err;\n          }\n        }\n\n        return resp.json();\n      }).then(function (newTodo) {\n        //concatanation array\n        _this3.setState({\n          todos: [].concat(_toConsumableArray(_this3.state.todos), [newTodo])\n        });\n      });\n    }\n  }, {\n    key: \"deleteTodo\",\n    value: function deleteTodo(id) {\n      var _this4 = this;\n\n      var deleteURL = APIURL + id;\n      fetch(deleteURL, {\n        method: 'delete'\n      }).then(function (resp) {\n        if (!resp.ok) {\n          if (resp.status >= 400 && resp.status < 500) {\n            return resp.json().then(function (data) {\n              var err = {\n                whatever: data.message\n              };\n              throw err;\n            });\n          } else {\n            var err = {\n              whatever: 'Please try again later, server is not responding'\n            };\n            throw err;\n          }\n        }\n\n        return resp.json();\n      }).then(function () {\n        //concatanation array\n        var todos = _this4.state.todos.filter(function (whatever) {\n          return whatever._id !== id;\n        });\n\n        _this4.setState({\n          todos: todos\n        });\n      });\n    }\n  }, {\n    key: \"toggleTodo\",\n    value: function toggleTodo(todo) {\n      var _this5 = this;\n\n      var updateURL = APIURL + todo._id;\n      fetch(updateURL, {\n        method: 'put',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        //set it to false\n        body: JSON.stringify({\n          completed: !todo.completed\n        })\n      }).then(function (resp) {\n        if (!resp.ok) {\n          if (resp.status >= 400 && resp.status < 500) {\n            return resp.json().then(function (data) {\n              var err = {\n                whatever: data.message\n              };\n              throw err;\n            });\n          } else {\n            var err = {\n              whatever: 'Please try again later, server is not responding'\n            };\n            throw err;\n          }\n        }\n\n        return resp.json();\n      }).then(function (updateTodo) {\n        //concatanation array\n        var todos = _this5.state.todos.map(function (t) {\n          return t._id === updateTodo._id ? _objectSpread({}, t, {\n            completed: !t.completed\n          }) : t;\n        });\n\n        _this5.setState({\n          todos: todos\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      //there are for objects here id.. name.. completed..\n      var todos = this.state.todos.map(function (t) {\n        return React.createElement(Todoitem, Object.assign({\n          key: t._id\n        }, t, {\n          onDelete: _this6.deleteTodo.bind(_this6, t._id),\n          onToggle: _this6.toggleTodo.bind(_this6, t),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Seattle Love story\"), React.createElement(TodoForm, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, todos), React.createElement(\"img\", {\n        className: \"Header-logo\",\n        src: \"image/background\",\n        alt: \"Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoList;\n}(Component); //ES6 features (default is only for one class)\n\n\nexport default TodoList;","map":{"version":3,"sources":["C:\\Users\\G2945\\WebstormProjects\\todolist\\frontend\\src\\TodoList.js"],"names":["React","Component","Todoitem","TodoForm","APIURL","TodoList","props","state","todos","addTodo","bind","loadTodos","fetch","then","resp","ok","status","json","data","err","whatever","message","setState","val","method","headers","Headers","body","JSON","stringify","name","newTodo","id","deleteURL","filter","_id","todo","updateURL","completed","updateTodo","map","t","deleteTodo","toggleTodo"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport Todoitem from \"./Todoitem\";\r\n\r\nimport TodoForm from './TodoForm';\r\n\r\n\r\n\r\nconst APIURL='/api/todos/';\r\n\r\n\r\nclass TodoList extends Component{\r\n    constructor(props){\r\n        super (props);\r\n        this.state={\r\n            todos:[]\r\n        }\r\n        this.addTodo=this.addTodo.bind(this);\r\n    }\r\n    componentWillMount(){\r\n        this.loadTodos();\r\n    }\r\n\r\n\r\n    loadTodos(){\r\n        fetch(APIURL)\r\n            .then((resp)=>{\r\n                if(!resp.ok) {\r\n                    if (resp.status >= 400 && resp.status < 500) {\r\n                        return resp.json().then(data => {\r\n                            let err = {whatever: data.message};\r\n                            throw err;\r\n                        })\r\n                    } else {\r\n                        let err = {whatever: 'Please try again later, server is not responding'}\r\n                        throw err;\r\n                    }\r\n                }\r\n                return resp.json();\r\n            })\r\n            //setState means we should change the todos in state\r\n            .then(todos=> {\r\n                this.setState({todos})\r\n            });\r\n    }\r\n    //take second argument\r\n    addTodo(val){\r\n        fetch(APIURL,{\r\n            method:'post',\r\n            headers: new Headers({\r\n                'Content-Type':'application/json',}),\r\n            body: JSON.stringify({name:val})\r\n\r\n\r\n        })\r\n            .then((resp)=>{\r\n                if(!resp.ok) {\r\n                    if (resp.status >= 400 && resp.status < 500) {\r\n                        return resp.json().then(data => {\r\n                            let err = {whatever: data.message};\r\n                            throw err;\r\n                        })\r\n                    } else {\r\n                        let err = {whatever: 'Please try again later, server is not responding'}\r\n                        throw err;\r\n                    }\r\n                }\r\n                return resp.json();\r\n            }).then(newTodo=>{\r\n                //concatanation array\r\n                this.setState({todos:[...this.state.todos,newTodo]})\r\n        });\r\n    }\r\n    deleteTodo(id){\r\n        const deleteURL=APIURL+ id;\r\n        fetch(deleteURL,{\r\n            method:'delete'})\r\n            .then((resp)=>{\r\n                if(!resp.ok) {\r\n                    if (resp.status >= 400 && resp.status < 500) {\r\n                        return resp.json().then(data => {\r\n                            let err = {whatever: data.message};\r\n                            throw err;\r\n                        })\r\n                    } else {\r\n                        let err = {whatever: 'Please try again later, server is not responding'}\r\n                        throw err;\r\n                    }\r\n                }\r\n                return resp.json();\r\n            }).then(()=>{\r\n            //concatanation array\r\n            const todos=this.state.todos.filter(whatever=>whatever._id!==id);\r\n            this.setState({todos:todos})\r\n        })\r\n    }\r\n    toggleTodo(todo){\r\n        const updateURL=APIURL+todo._id;\r\n        fetch(updateURL,{\r\n            method:'put',\r\n            headers: new Headers({\r\n                'Content-Type':'application/json',}),\r\n            //set it to false\r\n            body: JSON.stringify({completed:!todo.completed})\r\n\r\n        })\r\n            .then((resp)=>{\r\n                if(!resp.ok) {\r\n                    if (resp.status >= 400 && resp.status < 500) {\r\n                        return resp.json().then(data => {\r\n                            let err = {whatever: data.message};\r\n                            throw err;\r\n                        })\r\n                    } else {\r\n                        let err = {whatever: 'Please try again later, server is not responding'}\r\n                        throw err;\r\n                    }\r\n                }\r\n                return resp.json();\r\n            }).then(updateTodo=>{\r\n            //concatanation array\r\n            const todos=this.state.todos.map(t=>(t._id===updateTodo._id)?{...t,completed: !t.completed}\r\n            :t)\r\n            this.setState({todos:todos})\r\n        })\r\n    }\r\n\r\n    render(){\r\n        //there are for objects here id.. name.. completed..\r\n        const todos =this.state.todos.map((t)=>(<Todoitem key={t._id} {...t} onDelete={this.deleteTodo.bind(this,t._id)}\r\n        onToggle={this.toggleTodo.bind(this,t)}/>));\r\n        return (\r\n\r\n            <div>\r\n            <h1>Seattle Love story</h1>\r\n                {/**pass in todo function as props and call it from the todo form*/}\r\n               <TodoForm addTodo={this.addTodo}/>\r\n                <ul>\r\n                    {todos}\r\n                </ul>\r\n                <img className=\"Header-logo\" src=\"image/background\" alt=\"Logo\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n//ES6 features (default is only for one class)\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}