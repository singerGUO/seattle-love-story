{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\src\\\\TodoList.js\";\nimport React, { Component } from 'react';\nimport Todoitem from \"./Todoitem\";\nvar APIURL = '/api/todos';\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  function TodoList(props) {\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoList).call(this, props));\n    _this.state = {\n      todos: []\n    };\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadTodos();\n    }\n  }, {\n    key: \"loadTodos\",\n    value: function loadTodos() {\n      var _this2 = this;\n\n      fetch(APIURL).then(function (resp) {\n        if (!resp.ok) {\n          if (resp.status >= 400 && resp.status < 500) {\n            return resp.json().then(function (data) {\n              var err = {\n                whatever: data.message\n              };\n              throw err;\n            });\n          } else {\n            var err = {\n              whatever: 'Please try again later, server is not responding'\n            };\n            throw err;\n          }\n        }\n\n        return resp.json();\n      }).then(function (whatever) {\n        return _this2.setState({\n          whatever: whatever\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //there are for objects here id.. name.. completed..\n      var todos = this.state.todos.map(function (t) {\n        return React.createElement(Todoitem, Object.assign({\n          key: t._id\n        }, t, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Todo List!\"));\n    }\n  }]);\n\n  return TodoList;\n}(Component); //ES6 features (default is only for one class)\n\n\nexport default TodoList;","map":{"version":3,"sources":["C:\\Users\\G2945\\WebstormProjects\\todolist\\frontend\\src\\TodoList.js"],"names":["React","Component","Todoitem","APIURL","TodoList","props","state","todos","loadTodos","fetch","then","resp","ok","status","json","data","err","whatever","message","setState","map","t","_id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,IAAMC,MAAM,GAAC,YAAb;;IAGMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAOA,KAAP;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC;AADC,KAAX;AAFc;AAMjB;;;;yCACmB;AAChB,WAAKC,SAAL;AACH;;;gCAEU;AAAA;;AACPC,MAAAA,KAAK,CAACN,MAAD,CAAL,CACKO,IADL,CACU,UAACC,IAAD,EAAQ;AACV,YAAG,CAACA,IAAI,CAACC,EAAT,EAAY;AACR,cAAGD,IAAI,CAACE,MAAL,IAAa,GAAb,IAAkBF,IAAI,CAACE,MAAL,GAAY,GAAjC,EAAqC;AACjC,mBAAOF,IAAI,CAACG,IAAL,GAAYJ,IAAZ,CAAiB,UAAAK,IAAI,EAAE;AAC1B,kBAAIC,GAAG,GAAC;AAACC,gBAAAA,QAAQ,EAAEF,IAAI,CAACG;AAAhB,eAAR;AACA,oBAAMF,GAAN;AACH,aAHM,CAAP;AAIH,WALD,MAKK;AACD,gBAAIA,GAAG,GAAE;AAACC,cAAAA,QAAQ,EAAE;AAAX,aAAT;AACA,kBAAMD,GAAN;AACH;AACJ;;AACD,eAAOL,IAAI,CAACG,IAAL,EAAP;AAEH,OAfL,EAgBKJ,IAhBL,CAgBU,UAACO,QAAD;AAAA,eAAY,MAAI,CAACE,QAAL,CAAc;AAACF,UAAAA,QAAQ,EAARA;AAAD,SAAd,CAAZ;AAAA,OAhBV;AAiBH;;;6BAEO;AACJ;AACA,UAAMV,KAAK,GAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBa,GAAjB,CAAqB,UAAAC,CAAC;AAAA,eAAG,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,CAAC,CAACC;AAAjB,WAA0BD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAH;AAAA,OAAtB,CAAb;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,CADJ;AAKH;;;;EAxCkBpB,S,GA2CvB;;;AACA,eAAeG,QAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport Todoitem from \"./Todoitem\";\r\nconst APIURL='/api/todos';\r\n\r\n\r\nclass TodoList extends Component{\r\n    constructor(props){\r\n        super (props);\r\n        this.state={\r\n            todos:[]\r\n        }\r\n\r\n    }\r\n    componentWillMount(){\r\n        this.loadTodos();\r\n    }\r\n\r\n    loadTodos(){\r\n        fetch(APIURL)\r\n            .then((resp)=>{\r\n                if(!resp.ok){\r\n                    if(resp.status>=400&&resp.status<500){\r\n                        return resp.json().then(data=>{\r\n                            let err={whatever: data.message};\r\n                            throw err;\r\n                        })\r\n                    }else{\r\n                        let err ={whatever: 'Please try again later, server is not responding'}\r\n                        throw err;\r\n                    }\r\n                }\r\n                return resp.json();\r\n\r\n            })\r\n            .then((whatever)=>this.setState({whatever}));\r\n    }\r\n\r\n    render(){\r\n        //there are for objects here id.. name.. completed..\r\n        const todos =this.state.todos.map(t=>(<Todoitem key={t._id} {...t}/>));\r\n        return (\r\n            <div>\r\n            <h1>Todo List!</h1>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n//ES6 features (default is only for one class)\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}