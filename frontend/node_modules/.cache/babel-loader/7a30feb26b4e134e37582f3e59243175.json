{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\src\\\\TodoList.js\";\nimport React, { Component } from 'react';\nimport Todoitem from \"./Todoitem\";\nimport TodoForm from './TodoForm';\nimport * as apiCalls from './api';\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  function TodoList(props) {\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoList).call(this, props));\n    _this.state = {\n      todos: []\n    };\n    _this.addTodo = _this.addTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadTodos();\n    }\n  }, {\n    key: \"loadTodos\",\n    value: function () {\n      var _loadTodos = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var todos;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return apiCalls.getTodos();\n\n              case 2:\n                todos = _context.sent;\n                //setState means we should change the todos in state\n                this.setState({\n                  todos: todos\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadTodos() {\n        return _loadTodos.apply(this, arguments);\n      }\n\n      return loadTodos;\n    }() //take second argument\n\n  }, {\n    key: \"addTodo\",\n    value: function () {\n      var _addTodo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(val) {\n        var newTodo;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return apiCalls.createTodo(val);\n\n              case 2:\n                newTodo = _context2.sent;\n                //concatanation array\n                this.setState({\n                  todos: [].concat(_toConsumableArray(this.state.todos), [newTodo])\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function addTodo(_x) {\n        return _addTodo.apply(this, arguments);\n      }\n\n      return addTodo;\n    }()\n  }, {\n    key: \"deleteTodo\",\n    value: function () {\n      var _deleteTodo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        var todos;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return apiCalls.removeTodo(id);\n\n              case 2:\n                //concatanation array\n                todos = this.state.todos.filter(function (whatever) {\n                  return whatever._id !== id;\n                });\n                this.setState({\n                  todos: todos\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function deleteTodo(_x2) {\n        return _deleteTodo.apply(this, arguments);\n      }\n\n      return deleteTodo;\n    }()\n  }, {\n    key: \"toggleTodo\",\n    value: function () {\n      var _toggleTodo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(todo) {\n        var updatedTodo, todos;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return apiCalls.updateTodo(todo);\n\n              case 2:\n                updatedTodo = _context4.sent;\n                //concatanation array\n                todos = this.state.todos.map(function (t) {\n                  return t._id === updatedTodo._id ? _objectSpread({}, t, {\n                    completed: !t.completed\n                  }) : t;\n                });\n                this.setState({\n                  todos: todos\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function toggleTodo(_x3) {\n        return _toggleTodo.apply(this, arguments);\n      }\n\n      return toggleTodo;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //there are for objects here id.. name.. completed..\n      var todos = this.state.todos.map(function (t) {\n        return React.createElement(Todoitem, Object.assign({\n          key: t._id\n        }, t, {\n          onDelete: _this2.deleteTodo.bind(_this2, t._id),\n          onToggle: _this2.toggleTodo.bind(_this2, t),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Seattle Love story\"), React.createElement(TodoForm, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, todos), React.createElement(\"img\", {\n        className: \"Header-logo\",\n        src: \"image/background.jpg\",\n        alt: \"Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoList;\n}(Component); //ES6 features (default is only for one class)\n\n\nexport default TodoList;","map":{"version":3,"sources":["C:\\Users\\G2945\\WebstormProjects\\todolist\\frontend\\src\\TodoList.js"],"names":["React","Component","Todoitem","TodoForm","apiCalls","TodoList","props","state","todos","addTodo","bind","loadTodos","getTodos","setState","val","createTodo","newTodo","id","removeTodo","filter","whatever","_id","todo","updateTodo","updatedTodo","map","t","completed","deleteTodo","toggleTodo"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport Todoitem from \"./Todoitem\";\r\n\r\nimport TodoForm from './TodoForm';\r\n\r\nimport * as apiCalls from './api';\r\n\r\n\r\n\r\n\r\n\r\nclass TodoList extends Component{\r\n    constructor(props){\r\n        super (props);\r\n        this.state={\r\n            todos:[]\r\n        }\r\n        this.addTodo=this.addTodo.bind(this);\r\n    }\r\n    componentWillMount(){\r\n        this.loadTodos();\r\n    }\r\n\r\n\r\n    async loadTodos(){\r\n        //wait until it is done or not\r\n      let todos=await apiCalls.getTodos();\r\n\r\n            //setState means we should change the todos in state\r\n\r\n        this.setState({todos});\r\n\r\n    }\r\n    //take second argument\r\n    async addTodo(val){\r\n        let newTodo=await apiCalls.createTodo(val)\r\n\r\n                //concatanation array\r\n        this.setState({todos:[...this.state.todos,newTodo]});\r\n    }\r\n    async deleteTodo(id){\r\n            await apiCalls.removeTodo(id);\r\n            //concatanation array\r\n            const todos=this.state.todos.filter(whatever=>whatever._id!==id);\r\n            this.setState({todos:todos});\r\n    }\r\n    async toggleTodo(todo){\r\n        let updatedTodo=await apiCalls.updateTodo(todo);\r\n\r\n            //concatanation array\r\n            const todos=this.state.todos.map(t=>(t._id===updatedTodo._id)?{...t,completed: !t.completed}\r\n            :t)\r\n            this.setState({todos:todos});\r\n\r\n    }\r\n\r\n    render(){\r\n        //there are for objects here id.. name.. completed..\r\n        const todos =this.state.todos.map((t)=>(<Todoitem key={t._id} {...t} onDelete={this.deleteTodo.bind(this,t._id)}\r\n        onToggle={this.toggleTodo.bind(this,t)}/>));\r\n        return (\r\n\r\n            <div>\r\n            <h1>Seattle Love story</h1>\r\n                {/**pass in todo function as props and call it from the todo form*/}\r\n               <TodoForm addTodo={this.addTodo}/>\r\n                <ul>\r\n                    {todos}\r\n                </ul>\r\n                <img className=\"Header-logo\" src=\"image/background.jpg\" alt=\"Logo\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n//ES6 features (default is only for one class)\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}