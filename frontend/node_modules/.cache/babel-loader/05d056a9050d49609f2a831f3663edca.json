{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\G2945\\\\WebstormProjects\\\\todolist\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar APIURL = '/api/todos/';\nexport function getTodos() {\n  return _getTodos.apply(this, arguments);\n}\n\nfunction _getTodos() {\n  _getTodos = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", fetch(APIURL).then(function (resp) {\n              if (!resp.ok) {\n                if (resp.status >= 400 && resp.status < 500) {\n                  return resp.json().then(function (data) {\n                    var err = {\n                      whatever: data.message\n                    };\n                    throw err;\n                  });\n                } else {\n                  var err = {\n                    whatever: 'Please try again later, server is not responding'\n                  };\n                  throw err;\n                }\n              }\n\n              return resp.json();\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getTodos.apply(this, arguments);\n}","map":{"version":3,"sources":["C:\\Users\\G2945\\WebstormProjects\\todolist\\frontend\\src\\api.js"],"names":["APIURL","getTodos","fetch","then","resp","ok","status","json","data","err","whatever","message"],"mappings":";;AAAA,IAAMA,MAAM,GAAC,aAAb;AAEA,gBAAsBC,QAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA,6CACIC,KAAK,CAACF,MAAD,CAAL,CACFG,IADE,CACG,UAACC,IAAD,EAAQ;AACV,kBAAG,CAACA,IAAI,CAACC,EAAT,EAAa;AACT,oBAAID,IAAI,CAACE,MAAL,IAAe,GAAf,IAAsBF,IAAI,CAACE,MAAL,GAAc,GAAxC,EAA6C;AACzC,yBAAOF,IAAI,CAACG,IAAL,GAAYJ,IAAZ,CAAiB,UAAAK,IAAI,EAAI;AAC5B,wBAAIC,GAAG,GAAG;AAACC,sBAAAA,QAAQ,EAAEF,IAAI,CAACG;AAAhB,qBAAV;AACA,0BAAMF,GAAN;AACH,mBAHM,CAAP;AAIH,iBALD,MAKO;AACH,sBAAIA,GAAG,GAAG;AAACC,oBAAAA,QAAQ,EAAE;AAAX,mBAAV;AACA,wBAAMD,GAAN;AACH;AACJ;;AACD,qBAAOL,IAAI,CAACG,IAAL,EAAP;AACH,aAdE,CADJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["const APIURL='/api/todos/';\r\n\r\nexport async function getTodos(){\r\n    return fetch(APIURL)\r\n        .then((resp)=>{\r\n            if(!resp.ok) {\r\n                if (resp.status >= 400 && resp.status < 500) {\r\n                    return resp.json().then(data => {\r\n                        let err = {whatever: data.message};\r\n                        throw err;\r\n                    })\r\n                } else {\r\n                    let err = {whatever: 'Please try again later, server is not responding'}\r\n                    throw err;\r\n                }\r\n            }\r\n            return resp.json();\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}